services:
  - type: web
    name: campus-bridge
    runtime: node
    nodeVersion: 18.x
    buildCommand: |
      # ===== INITIALIZATION =====
      export PROJECT_ROOT="/opt/render/project/src"
      echo "‚öôÔ∏è  PROJECT_ROOT set to: $PROJECT_ROOT"
      
      # ===== BACKEND NUCLEAR INSTALL =====
      echo "üîß BACKEND SETUP"
      cd $PROJECT_ROOT/backend
      echo "üìÇ Directory contents:"
      ls -la
      
      echo "üßπ Cleaning previous installs..."
      rm -rf node_modules package-lock.json .npmrc
      
      echo "üìù Configuring npm..."
      echo "legacy-peer-deps=true" > .npmrc
      echo "strict-peer-deps=false" >> .npmrc
      echo "save-exact=true" >> .npmrc
      
      echo "üì¶ Installing backend dependencies..."
      npm install --production=false --no-audit --force --no-fund
      echo "‚úÖ Backend dependencies verified:"
      npm list express --depth=0
      
      # ===== FRONTEND BUILD =====
      echo "üñ•Ô∏è  FRONTEND BUILD"
      cd $PROJECT_ROOT/frontend
      npm install --no-audit --no-fund
      npm run build
      
      # ===== FINAL VERIFICATION =====
      echo "üîç FINAL CHECKS"
      cd $PROJECT_ROOT/backend
      echo "üìå Critical paths:"
      node -e "
        console.log('1. NODE_PATH:', process.env.NODE_PATH);
        console.log('2. Express location:', require.resolve('express'));
        console.log('3. Module search paths:', module.paths);
        console.log('4. Process working directory:', process.cwd());
      "
    startCommand: |
      # ===== STARTUP SEQUENCE =====
      export PROJECT_ROOT="/opt/render/project/src"
      cd $PROJECT_ROOT/backend
      export NODE_PATH="$PROJECT_ROOT/backend/node_modules"
      
      echo "üöÄ STARTUP CHECKS:"
      echo "1. Current directory: $(pwd)"
      echo "2. NODE_PATH: $NODE_PATH"
      node -e "
        try {
          console.log('3. Express resolved at:', require.resolve('express'));
          console.log('4. Module paths:', module.paths);
        } catch (e) {
          console.error('‚ùå CRITICAL ERROR:', e);
          process.exit(1);
        }
      "
      
      echo "‚è≥ Starting server..."
      node server.js
    envVars:
      - key: NODE_PATH
        value: "/opt/render/project/src/backend/node_modules"
      - key: NODE_ENV
        value: production
      - key: PORT
        value: 10000
    healthCheckPath: /api/health
    autoDeploy: true