services:
  - type: web
    name: campus-bridge
    runtime: node
    nodeVersion: 18.x
    buildCommand: |
      # ===== INIT =====
      export PROJECT_ROOT="/opt/render/project/src"
      echo "‚öôÔ∏è  PROJECT_ROOT set to: $PROJECT_ROOT"

      # ===== FRONTEND FIRST =====
      echo "üñ•Ô∏è  FRONTEND SETUP"
      cd $PROJECT_ROOT/frontend
      echo "üì¶ Installing frontend dependencies (including dev)..."
      npm install --no-audit --no-fund --include=dev || (echo '‚ùå Failed to install frontend deps' && exit 1)

      echo "üöß Building frontend..."
      npx vite build || (echo '‚ùå Vite build failed' && exit 1)

      # ===== BACKEND SETUP =====
      echo "üîß BACKEND SETUP"
      cd $PROJECT_ROOT/backend
      rm -rf node_modules package-lock.json .npmrc
      echo "legacy-peer-deps=true" > .npmrc
      echo "strict-peer-deps=false" >> .npmrc
      echo "save-exact=true" >> .npmrc

      echo "üì¶ Installing backend dependencies..."
      npm install --production=false --no-audit --force --no-fund
    startCommand: |
      export PROJECT_ROOT="/opt/render/project/src"
      cd $PROJECT_ROOT/backend
      export NODE_PATH="$PROJECT_ROOT/backend/node_modules"

      echo "‚è≥ Starting server..."
      node server.js
    envVars:
      - key: NODE_PATH
        value: "/opt/render/project/src/backend/node_modules"
      - key: NODE_ENV
        value: production
      - key: PORT
        value: 10000
    healthCheckPath: /api/health
    autoDeploy: true
